8f 84 00 00  // [00400000] lw $4, 0($28)                   ; 10: lw      $a0, 0($gp)
8f 85 00 04  // [00400004] lw $5, 4($28)                   ; 11: lw      $a1, 4($gp)
00 bc 40 20  // [00400008] add $8, $5, $28                 ; 12: add     $t0, $a1, $gp   # t0 = gp, since `lw $a1` is at ID
8f 86 00 08  // [0040000c] lw $6, 8($28)                   ; 13: lw      $a2, 8($gp)
00 a5 48 20  // [00400010] add $9, $5, $5                  ; 14: add     $t1, $a1, $a1   # t1 = 2, since `lw $a1` is at MEM (when this enter ID, lw enter WB)
8f 87 00 0c  // [00400014] lw $7, 12($28)                  ; 15: lw      $a3, 12($gp)
00 09 50 22  // [00400018] sub $10, $0, $9                 ; 16: sub     $t2, $0, $t1    # t2 = 0, since `add $t1` is at MEM
00 00 00 00  // [0040001c] nop                             ; 17: nop
00 c7 58 2a  // [00400020] slt $11, $6, $7                 ; 18: slt     $t3, $a2, $a3   # t3 = 1, Read after write need to wait for ? more instructions?
00 a6 60 2a  // [00400024] slt $12, $5, $6                 ; 19: slt     $t4, $a1, $a2   # t4 = 1
03 8b 68 25  // [00400028] or $13, $28, $11                ; 20: or      $t5, $gp, $t3   # t5 = gp, since t3 has not been written yet
00 ab 70 24  // [0040002c] and $14, $5, $11                ; 21: and     $t6, $a1, $t3   # t6 = 1, since t3 is written in this cycle
11 6c 00 06  // [00400030] beq $11, $12, 24 [end-0x00400030]; 22: beq     $t3, $t4, end   # taken
00 05 88 20  // [00400034] add $17, $0, $5                 ; 23: add     $s1, $0, $a1    # will this executed even branch is taken? How about others?
00 06 90 20  // [00400038] add $18, $0, $6                 ; 24: add     $s2, $0, $a2
00 07 98 20  // [0040003c] add $19, $0, $7                 ; 25: add     $s3, $0, $a3
00 c6 a0 20  // [00400040] add $20, $6, $6                 ; 26: add     $s4, $a2, $a2
00 c7 a8 20  // [00400044] add $21, $6, $7                 ; 27: add     $s5, $a2, $a3
00 e7 b0 20  // [00400048] add $22, $7, $7                 ; 28: add     $s6, $a3, $a3
02 86 b8 20  // [0040004c] add $23, $20, $6                ; 29: add     $s7, $s4, $a2   # s7 = 2
