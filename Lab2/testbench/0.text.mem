03 9c 48 20  // [00400000] add $9, $28, $28                ; 11: add     $t1, $gp, $gp   # $t1 = 2 * $gp
03 89 50 22  // [00400004] sub $10, $28, $9                ; 12: sub     $t2, $gp, $t1   # $t2 = - $gp
01 3c 20 2a  // [00400008] slt $4, $9, $28                 ; 13: slt     $a0, $t1, $gp   # $a0 = 0
03 89 28 2a  // [0040000c] slt $5, $28, $9                 ; 14: slt     $a1, $gp, $t1   # $a1 = 1
01 9c 10 2a  // [00400010] slt $2, $12, $28                ; 15: slt     $v0, $t4, $gp   # $v0 = 1 (since $t4 is negative)
03 8c 18 2a  // [00400014] slt $3, $28, $12                ; 16: slt     $v1, $gp, $t4   # $v1 = 0
01 3c 40 22  // [00400018] sub $8, $9, $28                 ; 17: sub     $t0, $t1, $gp   # $t0 = $gp
01 1c 80 2a  // [0040001c] slt $16, $8, $28                ; 18: slt     $s0, $t0, $gp   # $s0 = 0
03 88 88 2a  // [00400020] slt $17, $28, $8                ; 19: slt     $s1, $gp, $t0   # $s1 = 0
01 2a 00 25  // [00400024] or $0, $9, $10                  ; 20: or      $zero, $t1, $t2 # test write to zero
01 2a 00 24  // [00400028] and $0, $9, $10                 ; 21: and     $zero, $t1, $t2
01 2a 58 25  // [0040002c] or $11, $9, $10                 ; 22: or      $t3, $t1, $t2   # test OR
01 2a 60 24  // [00400030] and $12, $9, $10                ; 23: and     $t4, $t1, $t2   # test AND
00 00 00 00  // [00400034] nop                             ; 24: nop                     # test NOP
3c 01 10 01  // [00400038] lui $1, 4097                    ; 25: lw      $t5, hun     # test LW
8c 2d 80 00  // [0040003c] lw $13, -32768($1)
af 8d 00 08  // [00400040] sw $13, 8($28)                  ; 26: sw      $t5, 8($gp)     # test SW
11 1c 00 02  // [00400044] beq $8, $28, 8 [btg-0x00400044] ; 27: beq     $t0, $gp, btg   # [bst] should branch
00 1c c8 25  // [00400048] or $25, $0, $28                 ; 28: or      $t9, $zero, $gp # should not execute
8f 98 00 00  // [0040004c] lw $24, 0($28)                  ; 29: lw      $t8, 0($gp)     # should not execute
08 10 00 17  // [00400050] j 0x0040005c [end]              ; 30: j       end             # [btg] should jump
00 1c 78 25  // [00400054] or $15, $0, $28                 ; 31: or      $t7, $zero, $gp # should not execute
8f 8e 00 00  // [00400058] lw $14, 0($28)                  ; 32: lw      $t6, 0($gp)     # should not execute
3c 01 10 01  // [0040005c] lui $1, 4097                    ; 33: lw      $t5, hah        # [end]
8c 2d 80 04  // [00400060] lw $13, -32764($1)
af 8d 00 0c  // [00400064] sw $13, 12($28)                 ; 34: sw      $t5, 12($gp)
10 1c ff f6  // [00400068] beq $0, $28, -40 [bst-0x00400068]; 35: beq     $zero, $gp, bst # should not branch
3c 01 a1 14  // [0040006c] lui $1, -24300                  ; 36: li      $a3, 0xa114514a # test li (lui, ori)
34 27 51 4a  // [00400070] ori $7, $1, 20810
